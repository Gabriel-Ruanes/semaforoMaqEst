

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Feb 18 14:09:29 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_amarelo
   712                           	FNCALL	_main,_btPedestre
   713                           	FNCALL	_main,_delay
   714                           	FNCALL	_main,_semaforo_init
   715                           	FNCALL	_main,_verde
   716                           	FNCALL	_main,_verde_ped
   717                           	FNCALL	_main,_vermelho
   718                           	FNCALL	_main,_vermelho_ped
   719                           	FNROOT	_main
   720                           	global	_PORTDbits
   721                           _PORTDbits	set	0x8
   722  0008                     	global	_TRISDbits
   723                           _TRISDbits	set	0x88
   724  0088                     ; #config settings
   725                           global __CFG_FOSC$INTRC_NOCLKOUT
   726                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   727  0000                     global __CFG_WDTE$OFF
   728                           __CFG_WDTE$OFF equ 0x0
   729  0000                     global __CFG_PWRTE$OFF
   730                           __CFG_PWRTE$OFF equ 0x0
   731  0000                     global __CFG_MCLRE$OFF
   732                           __CFG_MCLRE$OFF equ 0x0
   733  0000                     global __CFG_CP$OFF
   734                           __CFG_CP$OFF equ 0x0
   735  0000                     global __CFG_CPD$OFF
   736                           __CFG_CPD$OFF equ 0x0
   737  0000                     global __CFG_BOREN$OFF
   738                           __CFG_BOREN$OFF equ 0x0
   739  0000                     global __CFG_IESO$OFF
   740                           __CFG_IESO$OFF equ 0x0
   741  0000                     global __CFG_FCMEN$OFF
   742                           __CFG_FCMEN$OFF equ 0x0
   743  0000                     global __CFG_LVP$OFF
   744                           __CFG_LVP$OFF equ 0x0
   745  0000                     global __CFG_BOR4V$BOR40V
   746                           __CFG_BOR4V$BOR40V equ 0x0
   747  0000                     global __CFG_WRT$OFF
   748                           __CFG_WRT$OFF equ 0x0
   749  0000                     	file	"C:\Users\21192694\AppData\Local\Temp\scis."
   750                           	line	#
   751                           psect cinit,class=CODE,delta=2
   752                           global start_initialization
   753                           start_initialization:
   754  07FC                     
   755                           global __initialization
   756                           __initialization:
   757  07FC                     psect cinit,class=CODE,delta=2,merge=1
   758                           global end_of_initialization,__end_of__initialization
   759                           
   760                           ;End of C runtime variable initialization code
   761                           
   762                           end_of_initialization:
   763  07FC                     __end_of__initialization:
   764  07FC                     clrf status
   765  07FC  0183               ljmp _main	;jump to C main() function
   766  07FD  120A  118A  2EB2   psect	cstackCOMMON,class=COMMON,space=1,noexec
   767                           global __pcstackCOMMON
   768                           __pcstackCOMMON:
   769  0070                     ?_semaforo_init:	; 1 bytes @ 0x0
   770  0070                     ??_semaforo_init:	; 1 bytes @ 0x0
   771  0070                     ?_vermelho:	; 1 bytes @ 0x0
   772  0070                     ?_amarelo:	; 1 bytes @ 0x0
   773  0070                     ?_verde:	; 1 bytes @ 0x0
   774  0070                     ?_vermelho_ped:	; 1 bytes @ 0x0
   775  0070                     ?_verde_ped:	; 1 bytes @ 0x0
   776  0070                     ?_delay:	; 1 bytes @ 0x0
   777  0070                     ?_main:	; 1 bytes @ 0x0
   778  0070                     	global	?_btPedestre
   779                           ?_btPedestre:	; 2 bytes @ 0x0
   780  0070                     	global	delay@t
   781                           delay@t:	; 2 bytes @ 0x0
   782  0070                     	global	vermelho@x
   783                           vermelho@x:	; 2 bytes @ 0x0
   784  0070                     	global	amarelo@x
   785                           amarelo@x:	; 2 bytes @ 0x0
   786  0070                     	global	verde@x
   787                           verde@x:	; 2 bytes @ 0x0
   788  0070                     	global	verde_ped@x
   789                           verde_ped@x:	; 2 bytes @ 0x0
   790  0070                     	global	vermelho_ped@x
   791                           vermelho_ped@x:	; 2 bytes @ 0x0
   792  0070                     	ds	2
   793  0070                     ??_vermelho:	; 1 bytes @ 0x2
   794  0072                     ??_amarelo:	; 1 bytes @ 0x2
   795  0072                     ??_verde:	; 1 bytes @ 0x2
   796  0072                     ??_vermelho_ped:	; 1 bytes @ 0x2
   797  0072                     ??_verde_ped:	; 1 bytes @ 0x2
   798  0072                     ??_btPedestre:	; 1 bytes @ 0x2
   799  0072                     ??_delay:	; 1 bytes @ 0x2
   800  0072                     	ds	2
   801  0072                     ??_main:	; 1 bytes @ 0x4
   802  0074                     	global	main@estado
   803                           main@estado:	; 2 bytes @ 0x4
   804  0074                     	ds	2
   805  0074                     	global	main@t
   806                           main@t:	; 2 bytes @ 0x6
   807  0076                     	ds	2
   808  0076                     ;!
   809                           ;!Data Sizes:
   810                           ;!    Strings     0
   811                           ;!    Constant    0
   812                           ;!    Data        0
   813                           ;!    BSS         0
   814                           ;!    Persistent  0
   815                           ;!    Stack       0
   816                           ;!
   817                           ;!Auto Spaces:
   818                           ;!    Space          Size  Autos    Used
   819                           ;!    COMMON           14      8       8
   820                           ;!    BANK0            80      0       0
   821                           ;!    BANK1            80      0       0
   822                           ;!    BANK3            96      0       0
   823                           ;!    BANK2            96      0       0
   824                           
   825                           ;!
   826                           ;!Pointer List with Targets:
   827                           ;!
   828                           ;!    None.
   829                           
   830                           
   831                           ;!
   832                           ;!Critical Paths under _main in COMMON
   833                           ;!
   834                           ;!    _main->_btPedestre
   835                           ;!
   836                           ;!Critical Paths under _main in BANK0
   837                           ;!
   838                           ;!    None.
   839                           ;!
   840                           ;!Critical Paths under _main in BANK1
   841                           ;!
   842                           ;!    None.
   843                           ;!
   844                           ;!Critical Paths under _main in BANK3
   845                           ;!
   846                           ;!    None.
   847                           ;!
   848                           ;!Critical Paths under _main in BANK2
   849                           ;!
   850                           ;!    None.
   851                           
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   854 ;;
   855                           
   856                           ;!
   857                           ;!Call Graph Tables:
   858                           ;!
   859                           ;! ---------------------------------------------------------------------------------
   860                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   861                           ;! ---------------------------------------------------------------------------------
   862                           ;! (0) _main                                                 4     4      0    1454
   863                           ;!                                              4 COMMON     4     4      0
   864                           ;!                            _amarelo
   865                           ;!                         _btPedestre
   866                           ;!                              _delay
   867                           ;!                      _semaforo_init
   868                           ;!                              _verde
   869                           ;!                          _verde_ped
   870                           ;!                           _vermelho
   871                           ;!                       _vermelho_ped
   872                           ;! ---------------------------------------------------------------------------------
   873                           ;! (1) _vermelho_ped                                         2     0      2     174
   874                           ;!                                              0 COMMON     2     0      2
   875                           ;! ---------------------------------------------------------------------------------
   876                           ;! (1) _vermelho                                             2     0      2     250
   877                           ;!                                              0 COMMON     2     0      2
   878                           ;! ---------------------------------------------------------------------------------
   879                           ;! (1) _verde_ped                                            2     0      2     174
   880                           ;!                                              0 COMMON     2     0      2
   881                           ;! ---------------------------------------------------------------------------------
   882                           ;! (1) _verde                                                2     0      2     250
   883                           ;!                                              0 COMMON     2     0      2
   884                           ;! ---------------------------------------------------------------------------------
   885                           ;! (1) _semaforo_init                                        0     0      0       0
   886                           ;! ---------------------------------------------------------------------------------
   887                           ;! (1) _delay                                                3     1      2     251
   888                           ;!                                              0 COMMON     3     1      2
   889                           ;! ---------------------------------------------------------------------------------
   890                           ;! (1) _btPedestre                                           4     2      2       0
   891                           ;!                                              0 COMMON     4     2      2
   892                           ;! ---------------------------------------------------------------------------------
   893                           ;! (1) _amarelo                                              2     0      2     250
   894                           ;!                                              0 COMMON     2     0      2
   895                           ;! ---------------------------------------------------------------------------------
   896                           ;! Estimated maximum stack depth 1
   897                           ;! ---------------------------------------------------------------------------------
   898                           ;!
   899                           ;! Call Graph Graphs:
   900                           ;!
   901                           ;! _main (ROOT)
   902                           ;!   _amarelo
   903                           ;!   _btPedestre
   904                           ;!   _delay
   905                           ;!   _semaforo_init
   906                           ;!   _verde
   907                           ;!   _verde_ped
   908                           ;!   _vermelho
   909                           ;!   _vermelho_ped
   910                           ;!
   911                           
   912                           ;! Address spaces:
   913                           
   914                           ;!Name               Size   Autos  Total    Cost      Usage
   915                           ;!BITCOMMON            E      0       0       0        0.0%
   916                           ;!EEDATA             100      0       0       0        0.0%
   917                           ;!NULL                 0      0       0       0        0.0%
   918                           ;!CODE                 0      0       0       0        0.0%
   919                           ;!COMMON               E      8       8       1       57.1%
   920                           ;!BITSFR0              0      0       0       1        0.0%
   921                           ;!SFR0                 0      0       0       1        0.0%
   922                           ;!BITSFR1              0      0       0       2        0.0%
   923                           ;!SFR1                 0      0       0       2        0.0%
   924                           ;!STACK                0      0       0       2        0.0%
   925                           ;!ABS                  0      0       0       3        0.0%
   926                           ;!BITBANK0            50      0       0       4        0.0%
   927                           ;!BITSFR3              0      0       0       4        0.0%
   928                           ;!SFR3                 0      0       0       4        0.0%
   929                           ;!BANK0               50      0       0       5        0.0%
   930                           ;!BITSFR2              0      0       0       5        0.0%
   931                           ;!SFR2                 0      0       0       5        0.0%
   932                           ;!BITBANK1            50      0       0       6        0.0%
   933                           ;!BANK1               50      0       0       7        0.0%
   934                           ;!BITBANK3            60      0       0       8        0.0%
   935                           ;!BANK3               60      0       0       9        0.0%
   936                           ;!BITBANK2            60      0       0      10        0.0%
   937                           ;!BANK2               60      0       0      11        0.0%
   938                           ;!DATA                 0      0       0      12        0.0%
   939                           
   940                           	global	_main
   941                           
   942 ;; *************** function _main *****************
   943 ;; Defined at:
   944 ;;		line 14 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  t               2    6[COMMON] int 
   949 ;;  estado          2    4[COMMON] int 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : B00/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         4       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0
   962 ;;      Totals:         4       0       0       0       0
   963 ;;Total ram usage:        4 bytes
   964 ;; Hardware stack levels required when called:    1
   965 ;; This function calls:
   966 ;;		_amarelo
   967 ;;		_btPedestre
   968 ;;		_delay
   969 ;;		_semaforo_init
   970 ;;		_verde
   971 ;;		_verde_ped
   972 ;;		_vermelho
   973 ;;		_vermelho_ped
   974 ;; This function is called by:
   975 ;;		Startup code after reset
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   979                           	file	"main.c"
   980                           	line	14
   981                           global __pmaintext
   982                           __pmaintext:	;psect for function _main
   983  06B2                     psect	maintext
   984                           	file	"main.c"
   985                           	line	14
   986                           	global	__size_of_main
   987                           	__size_of_main	equ	__end_of_main-_main
   988  014A                     	
   989                           _main:	
   990  06B2                     ;incstack = 0
   991                           	opt	stack 7
   992                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   993                           	line	16
   994                           	
   995                           l782:	
   996  06B2                     ;main.c: 16:     int estado = 0;
   997                           	clrf	(main@estado)
   998  06B2  01F4               	clrf	(main@estado+1)
   999  06B3  01F5               	goto	l838
  1000  06B4  2FD5               	line	19
  1001                           ;main.c: 17:     int t;;main.c: 19:     while ( 1 )
  1002                           	
  1003                           l21:	
  1004  06B5                     	line	21
  1005                           ;main.c: 20:     {;main.c: 21:         switch ( estado )
  1006                           	goto	l838
  1007  06B5  2FD5               	line	23
  1008                           ;main.c: 22:         {;main.c: 23:             case 0:
  1009                           	
  1010                           l23:	
  1011  06B6                     	line	24
  1012                           	
  1013                           l784:	
  1014  06B6                     ;main.c: 24:                     estado = 1;
  1015                           	movlw	01h
  1016  06B6  3001               	movwf	(main@estado)
  1017  06B7  00F4               	movlw	0
  1018  06B8  3000               	movwf	((main@estado))+1
  1019  06B9  00F5               	line	25
  1020                           ;main.c: 25:                     break;
  1021                           	goto	l838
  1022  06BA  2FD5               	line	27
  1023                           ;main.c: 27:             case 1:
  1024                           	
  1025                           l25:	
  1026  06BB                     	line	28
  1027                           	
  1028                           l786:	
  1029  06BB                     ;main.c: 28:                     semaforo_init();
  1030                           	fcall	_semaforo_init
  1031  06BB  120A  118A  268A  120A  118A  	line	29
  1032                           	
  1033                           l788:	
  1034  06C0                     ;main.c: 29:                     estado = 2;
  1035                           	movlw	02h
  1036  06C0  3002               	movwf	(main@estado)
  1037  06C1  00F4               	movlw	0
  1038  06C2  3000               	movwf	((main@estado))+1
  1039  06C3  00F5               	line	30
  1040                           ;main.c: 30:                     break;
  1041                           	goto	l838
  1042  06C4  2FD5               	line	32
  1043                           ;main.c: 32:             case 2:
  1044                           	
  1045                           l26:	
  1046  06C5                     	line	33
  1047                           	
  1048                           l790:	
  1049  06C5                     ;main.c: 33:                     vermelho(0);
  1050                           	movlw	0
  1051  06C5  3000               	movwf	(vermelho@x)
  1052  06C6  00F0               	movwf	(vermelho@x+1)
  1053  06C7  00F1               	fcall	_vermelho
  1054  06C8  120A  118A  266E  120A  118A  	line	34
  1055                           ;main.c: 34:                     amarelo(0);
  1056                           	movlw	0
  1057  06CD  3000               	movwf	(amarelo@x)
  1058  06CE  00F0               	movwf	(amarelo@x+1)
  1059  06CF  00F1               	fcall	_amarelo
  1060  06D0  120A  118A  2656  120A  118A  	line	35
  1061                           ;main.c: 35:                     verde (1);
  1062                           	movlw	01h
  1063  06D5  3001               	movwf	(verde@x)
  1064  06D6  00F0               	movlw	0
  1065  06D7  3000               	movwf	((verde@x))+1
  1066  06D8  00F1               	fcall	_verde
  1067  06D9  120A  118A  265E  120A  118A  	line	36
  1068                           ;main.c: 36:                     vermelho_ped(1);
  1069                           	movlw	01h
  1070  06DE  3001               	movwf	(vermelho_ped@x)
  1071  06DF  00F0               	movlw	0
  1072  06E0  3000               	movwf	((vermelho_ped@x))+1
  1073  06E1  00F1               	fcall	_vermelho_ped
  1074  06E2  120A  118A  2676  120A  118A  	line	37
  1075                           ;main.c: 37:                     verde_ped(0);
  1076                           	movlw	0
  1077  06E7  3000               	movwf	(verde_ped@x)
  1078  06E8  00F0               	movwf	(verde_ped@x+1)
  1079  06E9  00F1               	fcall	_verde_ped
  1080  06EA  120A  118A  2666  120A  118A  	line	38
  1081                           ;main.c: 38:                     if ( btPedestre() == 1 )
  1082                           	fcall	_btPedestre
  1083  06EF  120A  118A  267E  120A  118A  		decf	((0+(?_btPedestre))),w
  1084  06F4  0370               iorwf	((1+(?_btPedestre))),w
  1085  06F5  0471               	btfss	status,2
  1086  06F6  1D03               	goto	u81
  1087  06F7  2EF9               	goto	u80
  1088  06F8  2EFA               u81:
  1089  06F9                     	goto	l838
  1090  06F9  2FD5               u80:
  1091  06FA                     	line	39
  1092                           	
  1093                           l792:	
  1094  06FA                     ;main.c: 39:                         estado = 3;
  1095                           	movlw	03h
  1096  06FA  3003               	movwf	(main@estado)
  1097  06FB  00F4               	movlw	0
  1098  06FC  3000               	movwf	((main@estado))+1
  1099  06FD  00F5               	goto	l838
  1100  06FE  2FD5               	
  1101                           l27:	
  1102  06FF                     	line	40
  1103                           ;main.c: 40:                     break;
  1104                           	goto	l838
  1105  06FF  2FD5               	line	42
  1106                           ;main.c: 42:             case 3:
  1107                           	
  1108                           l28:	
  1109  0700                     	line	43
  1110                           	
  1111                           l794:	
  1112  0700                     ;main.c: 43:                     t = 3000;
  1113                           	movlw	0B8h
  1114  0700  30B8               	movwf	(main@t)
  1115  0701  00F6               	movlw	0Bh
  1116  0702  300B               	movwf	((main@t))+1
  1117  0703  00F7               	line	44
  1118                           ;main.c: 44:                     estado = 4;
  1119                           	movlw	04h
  1120  0704  3004               	movwf	(main@estado)
  1121  0705  00F4               	movlw	0
  1122  0706  3000               	movwf	((main@estado))+1
  1123  0707  00F5               	line	45
  1124                           ;main.c: 45:                     break;
  1125                           	goto	l838
  1126  0708  2FD5               	line	47
  1127                           ;main.c: 47:             case 4:
  1128                           	
  1129                           l29:	
  1130  0709                     	line	48
  1131                           	
  1132                           l796:	
  1133  0709                     ;main.c: 48:                     --t;
  1134                           	movlw	0FFh
  1135  0709  30FF               	addwf	(main@t),f
  1136  070A  07F6               	skipnc
  1137  070B  1803               	incf	(main@t+1),f
  1138  070C  0AF7               	movlw	0FFh
  1139  070D  30FF               	addwf	(main@t+1),f
  1140  070E  07F7               	line	49
  1141                           	
  1142                           l798:	
  1143  070F                     ;main.c: 49:                     delay(1);
  1144                           	movlw	01h
  1145  070F  3001               	movwf	(delay@t)
  1146  0710  00F0               	movlw	0
  1147  0711  3000               	movwf	((delay@t))+1
  1148  0712  00F1               	fcall	_delay
  1149  0713  120A  118A  269B  120A  118A  	line	50
  1150                           	
  1151                           l800:	
  1152  0718                     ;main.c: 50:                     if ( t <= 0 )
  1153                           	movf	(main@t+1),w
  1154  0718  0877               	xorlw	80h
  1155  0719  3A80               	movwf	btemp+1
  1156  071A  00FF               	movlw	(0)^80h
  1157  071B  3080               	subwf	btemp+1,w
  1158  071C  027F               	skipz
  1159  071D  1D03               	goto	u95
  1160  071E  2F21               	movlw	01h
  1161  071F  3001               	subwf	(main@t),w
  1162  0720  0276               u95:
  1163  0721                     
  1164                           	skipnc
  1165  0721  1803               	goto	u91
  1166  0722  2F24               	goto	u90
  1167  0723  2F25               u91:
  1168  0724                     	goto	l804
  1169  0724  2F2A               u90:
  1170  0725                     	line	51
  1171                           	
  1172                           l802:	
  1173  0725                     ;main.c: 51:                         estado = 5;
  1174                           	movlw	05h
  1175  0725  3005               	movwf	(main@estado)
  1176  0726  00F4               	movlw	0
  1177  0727  3000               	movwf	((main@estado))+1
  1178  0728  00F5               	goto	l804
  1179  0729  2F2A               	
  1180                           l30:	
  1181  072A                     	line	52
  1182                           	
  1183                           l804:	
  1184  072A                     ;main.c: 52:                     if ( btPedestre() == 1 )
  1185                           	fcall	_btPedestre
  1186  072A  120A  118A  267E  120A  118A  		decf	((0+(?_btPedestre))),w
  1187  072F  0370               iorwf	((1+(?_btPedestre))),w
  1188  0730  0471               	btfss	status,2
  1189  0731  1D03               	goto	u101
  1190  0732  2F34               	goto	u100
  1191  0733  2F35               u101:
  1192  0734                     	goto	l838
  1193  0734  2FD5               u100:
  1194  0735                     	line	53
  1195                           	
  1196                           l806:	
  1197  0735                     ;main.c: 53:                         estado = 3;
  1198                           	movlw	03h
  1199  0735  3003               	movwf	(main@estado)
  1200  0736  00F4               	movlw	0
  1201  0737  3000               	movwf	((main@estado))+1
  1202  0738  00F5               	goto	l838
  1203  0739  2FD5               	
  1204                           l31:	
  1205  073A                     	line	54
  1206                           ;main.c: 54:                     break;
  1207                           	goto	l838
  1208  073A  2FD5               	line	56
  1209                           ;main.c: 56:             case 5:
  1210                           	
  1211                           l32:	
  1212  073B                     	line	57
  1213                           	
  1214                           l808:	
  1215  073B                     ;main.c: 57:                     vermelho(0);
  1216                           	movlw	0
  1217  073B  3000               	movwf	(vermelho@x)
  1218  073C  00F0               	movwf	(vermelho@x+1)
  1219  073D  00F1               	fcall	_vermelho
  1220  073E  120A  118A  266E  120A  118A  	line	58
  1221                           ;main.c: 58:                     amarelo(1);
  1222                           	movlw	01h
  1223  0743  3001               	movwf	(amarelo@x)
  1224  0744  00F0               	movlw	0
  1225  0745  3000               	movwf	((amarelo@x))+1
  1226  0746  00F1               	fcall	_amarelo
  1227  0747  120A  118A  2656  120A  118A  	line	59
  1228                           ;main.c: 59:                     verde(0);
  1229                           	movlw	0
  1230  074C  3000               	movwf	(verde@x)
  1231  074D  00F0               	movwf	(verde@x+1)
  1232  074E  00F1               	fcall	_verde
  1233  074F  120A  118A  265E  120A  118A  	line	60
  1234                           ;main.c: 60:                     vermelho_ped(0);
  1235                           	movlw	0
  1236  0754  3000               	movwf	(vermelho_ped@x)
  1237  0755  00F0               	movwf	(vermelho_ped@x+1)
  1238  0756  00F1               	fcall	_vermelho_ped
  1239  0757  120A  118A  2676  120A  118A  	line	61
  1240                           ;main.c: 61:                     verde_ped(1);
  1241                           	movlw	01h
  1242  075C  3001               	movwf	(verde_ped@x)
  1243  075D  00F0               	movlw	0
  1244  075E  3000               	movwf	((verde_ped@x))+1
  1245  075F  00F1               	fcall	_verde_ped
  1246  0760  120A  118A  2666  120A  118A  	line	62
  1247                           	
  1248                           l810:	
  1249  0765                     ;main.c: 62:                     t = 2000;
  1250                           	movlw	0D0h
  1251  0765  30D0               	movwf	(main@t)
  1252  0766  00F6               	movlw	07h
  1253  0767  3007               	movwf	((main@t))+1
  1254  0768  00F7               	line	63
  1255                           	
  1256                           l812:	
  1257  0769                     ;main.c: 63:                     estado = 6;
  1258                           	movlw	06h
  1259  0769  3006               	movwf	(main@estado)
  1260  076A  00F4               	movlw	0
  1261  076B  3000               	movwf	((main@estado))+1
  1262  076C  00F5               	line	64
  1263                           ;main.c: 64:                     break;
  1264                           	goto	l838
  1265  076D  2FD5               	line	66
  1266                           ;main.c: 66:             case 6:
  1267                           	
  1268                           l33:	
  1269  076E                     	line	67
  1270                           	
  1271                           l814:	
  1272  076E                     ;main.c: 67:                     delay(1);
  1273                           	movlw	01h
  1274  076E  3001               	movwf	(delay@t)
  1275  076F  00F0               	movlw	0
  1276  0770  3000               	movwf	((delay@t))+1
  1277  0771  00F1               	fcall	_delay
  1278  0772  120A  118A  269B  120A  118A  	line	68
  1279                           	
  1280                           l816:	
  1281  0777                     ;main.c: 68:                     --t;
  1282                           	movlw	0FFh
  1283  0777  30FF               	addwf	(main@t),f
  1284  0778  07F6               	skipnc
  1285  0779  1803               	incf	(main@t+1),f
  1286  077A  0AF7               	movlw	0FFh
  1287  077B  30FF               	addwf	(main@t+1),f
  1288  077C  07F7               	line	69
  1289                           	
  1290                           l818:	
  1291  077D                     ;main.c: 69:                     if ( t <= 0 )
  1292                           	movf	(main@t+1),w
  1293  077D  0877               	xorlw	80h
  1294  077E  3A80               	movwf	btemp+1
  1295  077F  00FF               	movlw	(0)^80h
  1296  0780  3080               	subwf	btemp+1,w
  1297  0781  027F               	skipz
  1298  0782  1D03               	goto	u115
  1299  0783  2F86               	movlw	01h
  1300  0784  3001               	subwf	(main@t),w
  1301  0785  0276               u115:
  1302  0786                     
  1303                           	skipnc
  1304  0786  1803               	goto	u111
  1305  0787  2F89               	goto	u110
  1306  0788  2F8A               u111:
  1307  0789                     	goto	l838
  1308  0789  2FD5               u110:
  1309  078A                     	line	70
  1310                           	
  1311                           l820:	
  1312  078A                     ;main.c: 70:                         estado = 7;
  1313                           	movlw	07h
  1314  078A  3007               	movwf	(main@estado)
  1315  078B  00F4               	movlw	0
  1316  078C  3000               	movwf	((main@estado))+1
  1317  078D  00F5               	goto	l838
  1318  078E  2FD5               	
  1319                           l34:	
  1320  078F                     	line	71
  1321                           ;main.c: 71:                     break;
  1322                           	goto	l838
  1323  078F  2FD5               	line	73
  1324                           ;main.c: 73:             case 7:
  1325                           	
  1326                           l35:	
  1327  0790                     	line	74
  1328                           	
  1329                           l822:	
  1330  0790                     ;main.c: 74:                     vermelho(1);
  1331                           	movlw	01h
  1332  0790  3001               	movwf	(vermelho@x)
  1333  0791  00F0               	movlw	0
  1334  0792  3000               	movwf	((vermelho@x))+1
  1335  0793  00F1               	fcall	_vermelho
  1336  0794  120A  118A  266E  120A  118A  	line	75
  1337                           ;main.c: 75:                     amarelo(0);
  1338                           	movlw	0
  1339  0799  3000               	movwf	(amarelo@x)
  1340  079A  00F0               	movwf	(amarelo@x+1)
  1341  079B  00F1               	fcall	_amarelo
  1342  079C  120A  118A  2656  120A  118A  	line	76
  1343                           ;main.c: 76:                     verde(0);
  1344                           	movlw	0
  1345  07A1  3000               	movwf	(verde@x)
  1346  07A2  00F0               	movwf	(verde@x+1)
  1347  07A3  00F1               	fcall	_verde
  1348  07A4  120A  118A  265E  120A  118A  	line	77
  1349                           	
  1350                           l824:	
  1351  07A9                     ;main.c: 77:                     t = 5000;
  1352                           	movlw	088h
  1353  07A9  3088               	movwf	(main@t)
  1354  07AA  00F6               	movlw	013h
  1355  07AB  3013               	movwf	((main@t))+1
  1356  07AC  00F7               	line	78
  1357                           	
  1358                           l826:	
  1359  07AD                     ;main.c: 78:                     estado = 8;
  1360                           	movlw	08h
  1361  07AD  3008               	movwf	(main@estado)
  1362  07AE  00F4               	movlw	0
  1363  07AF  3000               	movwf	((main@estado))+1
  1364  07B0  00F5               	line	79
  1365                           ;main.c: 79:                     break;
  1366                           	goto	l838
  1367  07B1  2FD5               	line	81
  1368                           ;main.c: 81:             case 8:
  1369                           	
  1370                           l36:	
  1371  07B2                     	line	82
  1372                           	
  1373                           l828:	
  1374  07B2                     ;main.c: 82:                     delay(1);
  1375                           	movlw	01h
  1376  07B2  3001               	movwf	(delay@t)
  1377  07B3  00F0               	movlw	0
  1378  07B4  3000               	movwf	((delay@t))+1
  1379  07B5  00F1               	fcall	_delay
  1380  07B6  120A  118A  269B  120A  118A  	line	83
  1381                           	
  1382                           l830:	
  1383  07BB                     ;main.c: 83:                     --t;
  1384                           	movlw	0FFh
  1385  07BB  30FF               	addwf	(main@t),f
  1386  07BC  07F6               	skipnc
  1387  07BD  1803               	incf	(main@t+1),f
  1388  07BE  0AF7               	movlw	0FFh
  1389  07BF  30FF               	addwf	(main@t+1),f
  1390  07C0  07F7               	line	84
  1391                           	
  1392                           l832:	
  1393  07C1                     ;main.c: 84:                     if ( t <= 0 )
  1394                           	movf	(main@t+1),w
  1395  07C1  0877               	xorlw	80h
  1396  07C2  3A80               	movwf	btemp+1
  1397  07C3  00FF               	movlw	(0)^80h
  1398  07C4  3080               	subwf	btemp+1,w
  1399  07C5  027F               	skipz
  1400  07C6  1D03               	goto	u125
  1401  07C7  2FCA               	movlw	01h
  1402  07C8  3001               	subwf	(main@t),w
  1403  07C9  0276               u125:
  1404  07CA                     
  1405                           	skipnc
  1406  07CA  1803               	goto	u121
  1407  07CB  2FCD               	goto	u120
  1408  07CC  2FCE               u121:
  1409  07CD                     	goto	l838
  1410  07CD  2FD5               u120:
  1411  07CE                     	line	85
  1412                           	
  1413                           l834:	
  1414  07CE                     ;main.c: 85:                         estado = 2;
  1415                           	movlw	02h
  1416  07CE  3002               	movwf	(main@estado)
  1417  07CF  00F4               	movlw	0
  1418  07D0  3000               	movwf	((main@estado))+1
  1419  07D1  00F5               	goto	l838
  1420  07D2  2FD5               	
  1421                           l37:	
  1422  07D3                     	line	86
  1423                           ;main.c: 86:                     break;
  1424                           	goto	l838
  1425  07D3  2FD5               	line	87
  1426                           	
  1427                           l836:	
  1428  07D4                     ;main.c: 87:         }
  1429                           	goto	l838
  1430  07D4  2FD5               	
  1431                           l22:	
  1432  07D5                     	
  1433                           l838:	
  1434  07D5                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1435                           ; Switch size 1, requested type "space"
  1436                           ; Number of cases is 1, Range of values is 0 to 0
  1437                           ; switch strategies available:
  1438                           ; Name         Instructions Cycles
  1439                           ; simple_byte            4     3 (average)
  1440                           ; direct_byte           11     8 (fixed)
  1441                           ; jumptable            260     6 (fixed)
  1442                           ;	Chosen strategy is simple_byte
  1443                           
  1444                           	movf (main@estado+1),w
  1445  07D5  0875               	opt asmopt_push
  1446                           	opt asmopt_off
  1447                           	xorlw	0^0	; case 0
  1448  07D6  3A00               	skipnz
  1449  07D7  1903               	goto	l876
  1450  07D8  2FDA               	goto	l838
  1451  07D9  2FD5               	opt asmopt_pop
  1452                           	
  1453                           l876:	
  1454  07DA                     ; Switch size 1, requested type "space"
  1455                           ; Number of cases is 9, Range of values is 0 to 8
  1456                           ; switch strategies available:
  1457                           ; Name         Instructions Cycles
  1458                           ; simple_byte           28    15 (average)
  1459                           ; direct_byte           35     8 (fixed)
  1460                           ; jumptable            260     6 (fixed)
  1461                           ;	Chosen strategy is simple_byte
  1462                           
  1463                           	movf (main@estado),w
  1464  07DA  0874               	opt asmopt_push
  1465                           	opt asmopt_off
  1466                           	xorlw	0^0	; case 0
  1467  07DB  3A00               	skipnz
  1468  07DC  1903               	goto	l784
  1469  07DD  2EB6               	xorlw	1^0	; case 1
  1470  07DE  3A01               	skipnz
  1471  07DF  1903               	goto	l786
  1472  07E0  2EBB               	xorlw	2^1	; case 2
  1473  07E1  3A03               	skipnz
  1474  07E2  1903               	goto	l790
  1475  07E3  2EC5               	xorlw	3^2	; case 3
  1476  07E4  3A01               	skipnz
  1477  07E5  1903               	goto	l794
  1478  07E6  2F00               	xorlw	4^3	; case 4
  1479  07E7  3A07               	skipnz
  1480  07E8  1903               	goto	l796
  1481  07E9  2F09               	xorlw	5^4	; case 5
  1482  07EA  3A01               	skipnz
  1483  07EB  1903               	goto	l808
  1484  07EC  2F3B               	xorlw	6^5	; case 6
  1485  07ED  3A03               	skipnz
  1486  07EE  1903               	goto	l814
  1487  07EF  2F6E               	xorlw	7^6	; case 7
  1488  07F0  3A01               	skipnz
  1489  07F1  1903               	goto	l822
  1490  07F2  2F90               	xorlw	8^7	; case 8
  1491  07F3  3A0F               	skipnz
  1492  07F4  1903               	goto	l828
  1493  07F5  2FB2               	goto	l838
  1494  07F6  2FD5               	opt asmopt_pop
  1495                           
  1496                           	
  1497                           l24:	
  1498  07F7                     	goto	l838
  1499  07F7  2FD5               	line	88
  1500                           ;main.c: 88:     }
  1501                           	
  1502                           l38:	
  1503  07F8                     	goto	l838
  1504  07F8  2FD5               	
  1505                           l39:	
  1506  07F9                     	line	89
  1507                           	
  1508                           l40:	
  1509  07F9                     	global	start
  1510                           	ljmp	start
  1511  07F9  120A  118A  2800   	opt stack 0
  1512                           GLOBAL	__end_of_main
  1513                           	__end_of_main:
  1514  07FC                     	signat	_main,89
  1515                           	global	_vermelho_ped
  1516                           
  1517 ;; *************** function _vermelho_ped *****************
  1518 ;; Defined at:
  1519 ;;		line 62 in file "semaforo.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  x               2    0[COMMON] int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         2       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0
  1536 ;;      Totals:         2       0       0       0       0
  1537 ;;Total ram usage:        2 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1546                           	file	"semaforo.c"
  1547                           	line	62
  1548                           global __ptext1
  1549                           __ptext1:	;psect for function _vermelho_ped
  1550  0676                     psect	text1
  1551                           	file	"semaforo.c"
  1552                           	line	62
  1553                           	global	__size_of_vermelho_ped
  1554                           	__size_of_vermelho_ped	equ	__end_of_vermelho_ped-_vermelho_ped
  1555  0008                     	
  1556                           _vermelho_ped:	
  1557  0676                     ;incstack = 0
  1558                           	opt	stack 7
  1559                           ; Regs used in _vermelho_ped: [wreg+status,0]
  1560                           	line	64
  1561                           	
  1562                           l768:	
  1563  0676                     ;semaforo.c: 62: void vermelho_ped ( int x );semaforo.c: 63: {;semaforo.c: 64:     PORTD
                                 bits.RD3 = x;
  1564                           	rrf	(vermelho_ped@x),w
  1565  0676  0C70               	bcf	status, 5	;RP0=0, select bank0
  1566  0677  1283               	bcf	status, 6	;RP1=0, select bank0
  1567  0678  1303               	skipc
  1568  0679  1C03               	bcf	(8),3	;volatile
  1569  067A  1188               	skipnc
  1570  067B  1803               	bsf	(8),3	;volatile
  1571  067C  1588               	line	65
  1572                           	
  1573                           l73:	
  1574  067D                     	return
  1575  067D  0008               	opt stack 0
  1576                           GLOBAL	__end_of_vermelho_ped
  1577                           	__end_of_vermelho_ped:
  1578  067E                     	signat	_vermelho_ped,4217
  1579                           	global	_vermelho
  1580                           
  1581 ;; *************** function _vermelho *****************
  1582 ;; Defined at:
  1583 ;;		line 37 in file "semaforo.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  x               2    0[COMMON] int 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         2       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0
  1600 ;;      Totals:         2       0       0       0       0
  1601 ;;Total ram usage:        2 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1610                           	line	37
  1611                           global __ptext2
  1612                           __ptext2:	;psect for function _vermelho
  1613  066E                     psect	text2
  1614                           	file	"semaforo.c"
  1615                           	line	37
  1616                           	global	__size_of_vermelho
  1617                           	__size_of_vermelho	equ	__end_of_vermelho-_vermelho
  1618  0008                     	
  1619                           _vermelho:	
  1620  066E                     ;incstack = 0
  1621                           	opt	stack 7
  1622                           ; Regs used in _vermelho: [wreg+status,0]
  1623                           	line	39
  1624                           	
  1625                           l762:	
  1626  066E                     ;semaforo.c: 37: void vermelho ( int x );semaforo.c: 38: {;semaforo.c: 39:     PORTDbits
                                 .RD7 = x;
  1627                           	rrf	(vermelho@x),w
  1628  066E  0C70               	bcf	status, 5	;RP0=0, select bank0
  1629  066F  1283               	bcf	status, 6	;RP1=0, select bank0
  1630  0670  1303               	skipc
  1631  0671  1C03               	bcf	(8),7	;volatile
  1632  0672  1388               	skipnc
  1633  0673  1803               	bsf	(8),7	;volatile
  1634  0674  1788               	line	40
  1635                           	
  1636                           l58:	
  1637  0675                     	return
  1638  0675  0008               	opt stack 0
  1639                           GLOBAL	__end_of_vermelho
  1640                           	__end_of_vermelho:
  1641  0676                     	signat	_vermelho,4217
  1642                           	global	_verde_ped
  1643                           
  1644 ;; *************** function _verde_ped *****************
  1645 ;; Defined at:
  1646 ;;		line 57 in file "semaforo.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  x               2    0[COMMON] int 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         2       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0
  1663 ;;      Totals:         2       0       0       0       0
  1664 ;;Total ram usage:        2 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_main
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1673                           	line	57
  1674                           global __ptext3
  1675                           __ptext3:	;psect for function _verde_ped
  1676  0666                     psect	text3
  1677                           	file	"semaforo.c"
  1678                           	line	57
  1679                           	global	__size_of_verde_ped
  1680                           	__size_of_verde_ped	equ	__end_of_verde_ped-_verde_ped
  1681  0008                     	
  1682                           _verde_ped:	
  1683  0666                     ;incstack = 0
  1684                           	opt	stack 7
  1685                           ; Regs used in _verde_ped: [wreg+status,0]
  1686                           	line	59
  1687                           	
  1688                           l770:	
  1689  0666                     ;semaforo.c: 57: void verde_ped ( int x );semaforo.c: 58: {;semaforo.c: 59:     PORTDbit
                                 s.RD2 = x;
  1690                           	rrf	(verde_ped@x),w
  1691  0666  0C70               	bcf	status, 5	;RP0=0, select bank0
  1692  0667  1283               	bcf	status, 6	;RP1=0, select bank0
  1693  0668  1303               	skipc
  1694  0669  1C03               	bcf	(8),2	;volatile
  1695  066A  1108               	skipnc
  1696  066B  1803               	bsf	(8),2	;volatile
  1697  066C  1508               	line	60
  1698                           	
  1699                           l70:	
  1700  066D                     	return
  1701  066D  0008               	opt stack 0
  1702                           GLOBAL	__end_of_verde_ped
  1703                           	__end_of_verde_ped:
  1704  066E                     	signat	_verde_ped,4217
  1705                           	global	_verde
  1706                           
  1707 ;; *************** function _verde *****************
  1708 ;; Defined at:
  1709 ;;		line 47 in file "semaforo.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  x               2    0[COMMON] int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         2       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0
  1726 ;;      Totals:         2       0       0       0       0
  1727 ;;Total ram usage:        2 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1736                           	line	47
  1737                           global __ptext4
  1738                           __ptext4:	;psect for function _verde
  1739  065E                     psect	text4
  1740                           	file	"semaforo.c"
  1741                           	line	47
  1742                           	global	__size_of_verde
  1743                           	__size_of_verde	equ	__end_of_verde-_verde
  1744  0008                     	
  1745                           _verde:	
  1746  065E                     ;incstack = 0
  1747                           	opt	stack 7
  1748                           ; Regs used in _verde: [wreg+status,0]
  1749                           	line	49
  1750                           	
  1751                           l766:	
  1752  065E                     ;semaforo.c: 47: void verde ( int x );semaforo.c: 48: {;semaforo.c: 49:     PORTDbits.RD
                                 5 = x;
  1753                           	rrf	(verde@x),w
  1754  065E  0C70               	bcf	status, 5	;RP0=0, select bank0
  1755  065F  1283               	bcf	status, 6	;RP1=0, select bank0
  1756  0660  1303               	skipc
  1757  0661  1C03               	bcf	(8),5	;volatile
  1758  0662  1288               	skipnc
  1759  0663  1803               	bsf	(8),5	;volatile
  1760  0664  1688               	line	50
  1761                           	
  1762                           l64:	
  1763  0665                     	return
  1764  0665  0008               	opt stack 0
  1765                           GLOBAL	__end_of_verde
  1766                           	__end_of_verde:
  1767  0666                     	signat	_verde,4217
  1768                           	global	_semaforo_init
  1769                           
  1770 ;; *************** function _semaforo_init *****************
  1771 ;; Defined at:
  1772 ;;		line 21 in file "semaforo.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		None
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1799                           	line	21
  1800                           global __ptext5
  1801                           __ptext5:	;psect for function _semaforo_init
  1802  068A                     psect	text5
  1803                           	file	"semaforo.c"
  1804                           	line	21
  1805                           	global	__size_of_semaforo_init
  1806                           	__size_of_semaforo_init	equ	__end_of_semaforo_init-_semaforo_init
  1807  0011                     	
  1808                           _semaforo_init:	
  1809  068A                     ;incstack = 0
  1810                           	opt	stack 7
  1811                           ; Regs used in _semaforo_init: []
  1812                           	line	23
  1813                           	
  1814                           l646:	
  1815  068A                     ;semaforo.c: 23:     TRISDbits.TRISD7 = 0;
  1816                           	bsf	status, 5	;RP0=1, select bank1
  1817  068A  1683               	bcf	status, 6	;RP1=0, select bank1
  1818  068B  1303               	bcf	(136)^080h,7	;volatile
  1819  068C  1388               	line	24
  1820                           ;semaforo.c: 24:     TRISDbits.TRISD6 = 0;
  1821                           	bcf	(136)^080h,6	;volatile
  1822  068D  1308               	line	25
  1823                           ;semaforo.c: 25:     TRISDbits.TRISD5 = 0;
  1824                           	bcf	(136)^080h,5	;volatile
  1825  068E  1288               	line	26
  1826                           ;semaforo.c: 26:     TRISDbits.TRISD1 = 1;
  1827                           	bsf	(136)^080h,1	;volatile
  1828  068F  1488               	line	27
  1829                           ;semaforo.c: 27:     TRISDbits.TRISD2 = 0;
  1830                           	bcf	(136)^080h,2	;volatile
  1831  0690  1108               	line	28
  1832                           ;semaforo.c: 28:     TRISDbits.TRISD3 = 0;
  1833                           	bcf	(136)^080h,3	;volatile
  1834  0691  1188               	line	29
  1835                           ;semaforo.c: 29:     PORTDbits.RD1 = 0;
  1836                           	bcf	status, 5	;RP0=0, select bank0
  1837  0692  1283               	bcf	status, 6	;RP1=0, select bank0
  1838  0693  1303               	bcf	(8),1	;volatile
  1839  0694  1088               	line	30
  1840                           ;semaforo.c: 30:     PORTDbits.RD2 = 0;
  1841                           	bcf	(8),2	;volatile
  1842  0695  1108               	line	31
  1843                           ;semaforo.c: 31:     PORTDbits.RD3 = 0;
  1844                           	bcf	(8),3	;volatile
  1845  0696  1188               	line	32
  1846                           ;semaforo.c: 32:     PORTDbits.RD5 = 0;
  1847                           	bcf	(8),5	;volatile
  1848  0697  1288               	line	33
  1849                           ;semaforo.c: 33:     PORTDbits.RD6 = 0;
  1850                           	bcf	(8),6	;volatile
  1851  0698  1308               	line	34
  1852                           ;semaforo.c: 34:     PORTDbits.RD7 = 0;
  1853                           	bcf	(8),7	;volatile
  1854  0699  1388               	line	35
  1855                           	
  1856                           l55:	
  1857  069A                     	return
  1858  069A  0008               	opt stack 0
  1859                           GLOBAL	__end_of_semaforo_init
  1860                           	__end_of_semaforo_init:
  1861  069B                     	signat	_semaforo_init,89
  1862                           	global	_delay
  1863                           
  1864 ;; *************** function _delay *****************
  1865 ;; Defined at:
  1866 ;;		line 12 in file "delay.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  t               2    0[COMMON] unsigned int 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1880 ;;      Params:         2       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0
  1882 ;;      Temps:          1       0       0       0       0
  1883 ;;      Totals:         3       0       0       0       0
  1884 ;;Total ram usage:        3 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1893                           	file	"delay.c"
  1894                           	line	12
  1895                           global __ptext6
  1896                           __ptext6:	;psect for function _delay
  1897  069B                     psect	text6
  1898                           	file	"delay.c"
  1899                           	line	12
  1900                           	global	__size_of_delay
  1901                           	__size_of_delay	equ	__end_of_delay-_delay
  1902  0017                     	
  1903                           _delay:	
  1904  069B                     ;incstack = 0
  1905                           	opt	stack 7
  1906                           ; Regs used in _delay: [wreg+status,2+status,0]
  1907                           	line	14
  1908                           	
  1909                           l776:	
  1910  069B                     ;delay.c: 12: void delay ( unsigned int t );delay.c: 13: {;delay.c: 14:     while ( t )

  1911                           	goto	l780
  1912  069B  2EAA               	
  1913                           l46:	
  1914  069C                     	line	16
  1915                           	
  1916                           l778:	
  1917  069C                     ;delay.c: 15:     {;delay.c: 16:         --t;
  1918                           	movlw	01h
  1919  069C  3001               	subwf	(delay@t),f
  1920  069D  02F0               	movlw	0
  1921  069E  3000               	skipc
  1922  069F  1C03               	decf	(delay@t+1),f
  1923  06A0  03F1               	subwf	(delay@t+1),f
  1924  06A1  02F1               	line	17
  1925                           ;delay.c: 17:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1926                           	opt asmopt_push
  1927                           opt asmopt_off
  1928                           	movlw	199
  1929  06A2  30C7               movwf	((??_delay+0)+0),f
  1930  06A3  00F2               	u137:
  1931  06A4                     	nop2
  1932  06A4  2EA5               decfsz	(??_delay+0)+0,f
  1933  06A5  0BF2               	goto	u137
  1934  06A6  2EA4               	nop2
  1935  06A7  2EA8               	nop2
  1936  06A8  2EA9               opt asmopt_pop
  1937                           
  1938                           	goto	l780
  1939  06A9  2EAA               	line	18
  1940                           ;delay.c: 18:     }
  1941                           	
  1942                           l45:	
  1943  06AA                     	line	14
  1944                           	
  1945                           l780:	
  1946  06AA                     ;delay.c: 14:     while ( t )
  1947                           	movf	((delay@t)),w
  1948  06AA  0870               iorwf	((delay@t+1)),w
  1949  06AB  0471               	btfss	status,2
  1950  06AC  1D03               	goto	u71
  1951  06AD  2EAF               	goto	u70
  1952  06AE  2EB0               u71:
  1953  06AF                     	goto	l778
  1954  06AF  2E9C               u70:
  1955  06B0                     	goto	l48
  1956  06B0  2EB1               	
  1957                           l47:	
  1958  06B1                     	line	19
  1959                           	
  1960                           l48:	
  1961  06B1                     	return
  1962  06B1  0008               	opt stack 0
  1963                           GLOBAL	__end_of_delay
  1964                           	__end_of_delay:
  1965  06B2                     	signat	_delay,4217
  1966                           	global	_btPedestre
  1967                           
  1968 ;; *************** function _btPedestre *****************
  1969 ;; Defined at:
  1970 ;;		line 52 in file "semaforo.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2    0[COMMON] int 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         2       0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0
  1986 ;;      Temps:          2       0       0       0       0
  1987 ;;      Totals:         4       0       0       0       0
  1988 ;;Total ram usage:        4 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  1997                           	file	"semaforo.c"
  1998                           	line	52
  1999                           global __ptext7
  2000                           __ptext7:	;psect for function _btPedestre
  2001  067E                     psect	text7
  2002                           	file	"semaforo.c"
  2003                           	line	52
  2004                           	global	__size_of_btPedestre
  2005                           	__size_of_btPedestre	equ	__end_of_btPedestre-_btPedestre
  2006  000C                     	
  2007                           _btPedestre:	
  2008  067E                     ;incstack = 0
  2009                           	opt	stack 7
  2010                           ; Regs used in _btPedestre: [wreg+status,2+status,0]
  2011                           	line	54
  2012                           	
  2013                           l772:	
  2014  067E                     ;semaforo.c: 54:     return (PORTDbits.RD1);
  2015                           	bcf	status, 5	;RP0=0, select bank0
  2016  067E  1283               	bcf	status, 6	;RP1=0, select bank0
  2017  067F  1303               	rrf	(8),w	;volatile
  2018  0680  0C08               	andlw	(1<<1)-1
  2019  0681  3901               	movwf	(??_btPedestre+0)+0
  2020  0682  00F2               	clrf	(??_btPedestre+0)+0+1
  2021  0683  01F3               	movf	0+(??_btPedestre+0)+0,w
  2022  0684  0872               	movwf	(?_btPedestre)
  2023  0685  00F0               	movf	1+(??_btPedestre+0)+0,w
  2024  0686  0873               	movwf	(?_btPedestre+1)
  2025  0687  00F1               	goto	l67
  2026  0688  2E89               	
  2027                           l774:	
  2028  0689                     	line	55
  2029                           	
  2030                           l67:	
  2031  0689                     	return
  2032  0689  0008               	opt stack 0
  2033                           GLOBAL	__end_of_btPedestre
  2034                           	__end_of_btPedestre:
  2035  068A                     	signat	_btPedestre,90
  2036                           	global	_amarelo
  2037                           
  2038 ;; *************** function _amarelo *****************
  2039 ;; Defined at:
  2040 ;;		line 42 in file "semaforo.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  x               2    0[COMMON] int 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         2       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0
  2057 ;;      Totals:         2       0       0       0       0
  2058 ;;Total ram usage:        2 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2067                           	line	42
  2068                           global __ptext8
  2069                           __ptext8:	;psect for function _amarelo
  2070  0656                     psect	text8
  2071                           	file	"semaforo.c"
  2072                           	line	42
  2073                           	global	__size_of_amarelo
  2074                           	__size_of_amarelo	equ	__end_of_amarelo-_amarelo
  2075  0008                     	
  2076                           _amarelo:	
  2077  0656                     ;incstack = 0
  2078                           	opt	stack 7
  2079                           ; Regs used in _amarelo: [wreg+status,0]
  2080                           	line	44
  2081                           	
  2082                           l764:	
  2083  0656                     ;semaforo.c: 42: void amarelo ( int x );semaforo.c: 43: {;semaforo.c: 44:     PORTDbits.
                                 RD6 = x;
  2084                           	rrf	(amarelo@x),w
  2085  0656  0C70               	bcf	status, 5	;RP0=0, select bank0
  2086  0657  1283               	bcf	status, 6	;RP1=0, select bank0
  2087  0658  1303               	skipc
  2088  0659  1C03               	bcf	(8),6	;volatile
  2089  065A  1308               	skipnc
  2090  065B  1803               	bsf	(8),6	;volatile
  2091  065C  1708               	line	45
  2092                           	
  2093                           l61:	
  2094  065D                     	return
  2095  065D  0008               	opt stack 0
  2096                           GLOBAL	__end_of_amarelo
  2097                           	__end_of_amarelo:
  2098  065E                     	signat	_amarelo,4217
  2099                           global	___latbits
  2100                           ___latbits	equ	2
  2101  0002                     	global	btemp
  2102                           	btemp set 07Eh
  2103  007E                     
  2104                           	DABS	1,126,2	;btemp
  2105                           	global	wtemp0
  2106                           	wtemp0 set btemp+0
  2107  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_btPedestre

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1454
                                              4 COMMON     4     4      0
                            _amarelo
                         _btPedestre
                              _delay
                      _semaforo_init
                              _verde
                          _verde_ped
                           _vermelho
                       _vermelho_ped
 ---------------------------------------------------------------------------------
 (1) _vermelho_ped                                         2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _vermelho                                             2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _verde_ped                                            2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _verde                                                2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _semaforo_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay                                                3     1      2     251
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _btPedestre                                           4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _amarelo                                              2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _amarelo
   _btPedestre
   _delay
   _semaforo_init
   _verde
   _verde_ped
   _vermelho
   _vermelho_ped

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Feb 18 14:09:29 2021

            _vermelho_ped 0676               __CFG_CP$OFF 0000                        l21 06B5  
                      l22 07D5                        l30 072A                        l31 073A  
                      l23 06B6                        l40 07F9                        l24 07F7  
                      l32 073B                        l33 076E                        l25 06BB  
                      l34 078F                        l26 06C5                        l35 0790  
                      l27 06FF                        l36 07B2                        l28 0700  
                      l61 065D                        l45 06AA                        l37 07D3  
                      l29 0709                        l46 069C                        l70 066D  
                      l38 07F8                        l47 06B1                        l55 069A  
                      l39 07F9                        l48 06B1                        l64 0665  
                      l73 067D                        l58 0675                        l67 0689  
                      u70 06B0                        u71 06AF                        u80 06FA  
                      u81 06F9                        u90 0725                        u91 0724  
                      u95 0721                       l800 0718                       l810 0765  
                     l802 0725                       l820 078A                       l812 0769  
                     l804 072A                       l646 068A                       l830 07BB  
                     l822 0790                       l814 076E                       l806 0735  
                     l832 07C1                       l824 07A9                       l816 0777  
                     l808 073B                       l770 0666                       l762 066E  
                     l834 07CE                       l826 07AD                       l818 077D  
                     l764 0656                       l772 067E                       l780 06AA  
                     l836 07D4                       l828 07B2                       l774 0689  
                     l766 065E                       l790 06C5                       l838 07D5  
                     l782 06B2                       l776 069B                       l768 0676  
                     l792 06FA                       l784 06B6                       l778 069C  
                     l794 0700                       l786 06BB                       l876 07DA  
                     l796 0709                       l788 06C0                       l798 070F  
                     u100 0735                       u101 0734                       u110 078A  
                     u111 0789                       u120 07CE                       u121 07CD  
                     u115 0786                       u125 07CA                       u137 06A4  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 06B2                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
         __end_of_amarelo 065E            __CFG_FCMEN$OFF 0000                     _delay 069B  
                   _verde 065E                     main@t 0076            __CFG_BOREN$OFF 0000  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07FC              __end_of_main 07FC                    ??_main 0074  
   __end_of_semaforo_init 069B                    ?_delay 0070                    ?_verde 0070  
          __CFG_PWRTE$OFF 0000                    delay@t 0070                 ??_amarelo 0072  
                  verde@x 0070          __end_of_vermelho 0676   __end_of__initialization 07FC  
          __pcstackCOMMON 0070             __end_of_delay 06B2             vermelho_ped@x 0070  
           __end_of_verde 0666                   ??_delay 0072                   ??_verde 0072  
              _btPedestre 067E                __pmaintext 06B2        __size_of_verde_ped 0008  
               ?_vermelho 0070                   _amarelo 0656                   __ptext1 0676  
                 __ptext2 066E                   __ptext3 0666                   __ptext4 065E  
                 __ptext5 068A                   __ptext6 069B                   __ptext7 067E  
                 __ptext8 0656      end_of_initialization 07FC               ?_btPedestre 0070  
       __end_of_verde_ped 066E                ??_vermelho 0072                 _PORTDbits 0008  
               _TRISDbits 0088                main@estado 0074             ?_vermelho_ped 0070  
  __size_of_semaforo_init 0011       __size_of_btPedestre 000C       start_initialization 07FC  
__CFG_FOSC$INTRC_NOCLKOUT 0000            ??_vermelho_ped 0072                 ___latbits 0002  
           _semaforo_init 068A                  ?_amarelo 0070         __size_of_vermelho 0008  
          ?_semaforo_init 0070            __size_of_delay 0017            __size_of_verde 0008  
            ??_btPedestre 0072                 _verde_ped 0666        __end_of_btPedestre 068A  
              verde_ped@x 0070      __end_of_vermelho_ped 067E                ?_verde_ped 0070  
        __size_of_amarelo 0008           ??_semaforo_init 0070         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 014A                  amarelo@x 0070                  _vermelho 066E  
               vermelho@x 0070               ??_verde_ped 0072     __size_of_vermelho_ped 0008  
